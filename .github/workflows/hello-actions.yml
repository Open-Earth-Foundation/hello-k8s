name: Push ECR EKS
on: [push]

jobs:
  pushToECR:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Logging to ECR
      run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/openearthfoundation
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Pushing service to ECR
      run: |
        VERSION=`1.0`
        docker build -t public.ecr.aws/openearthfoundation/helloworld:$VERSION helloworld
        docker tag helloworld:$VERSION public.ecr.aws/openearthfoundation/helloworld:$VERSION
        docker push public.ecr.aws/openearthfoundation/helloworld:$VERSION
  deployToEKS:
    needs: pushtoECR
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID_EKS_DEV_USER: ${{ secrets.AWS_ACCESS_KEY_ID_EKS_DEV_USER }}
      AWS_SECRET_ACCESS_KEY_EKS_DEV_USER: ${{ secrets.AWS_SECRET_ACCESS_KEY_EKS_DEV_USER }}  
      EKS_DEV_NAME: ${{ secrets.EKS_DEV_NAME }}    
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Creating kubeconfig file  
      run: aws eks update-kubeconfig --name ${{secrets.EKS_DEV_NAME}} --region us-east-1

    - name: Testing connection to EKS
      run: kubectl get pods -n default
      
    - name: Deploying service
      run: | 
        VERSION=`1.0`
        sed -i 's#<IMAGE_URL>#'public.ecr.aws/openearthfoundation/helloworld:$VERSION'#g' helloworld/eks-definition.yml
        cat helloworld/eks-definition.yml
        kubectl apply -f helloworld/eks-definition.yml -n default
        kubectl rollout status deployment helloworld-deployment -n default --timeout=90s